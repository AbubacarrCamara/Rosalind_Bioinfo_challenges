def motif():

    sequence = 'CGCCGCGACGAGCCGCGACGGCCGCGAGCCGCGATCGCCGCGAGCCGCGATAGCCGCGACGCCGCGATACGCCGCGACCGCCGCGAAGAGGGTTGTCTGCCGCGATGCCGCGACTTCGCCGCGATGCGAGCCGCGATGGGCCGCGATGGACGCCGCGAACGCAGCCGCGATGCCGCGAGCCTCGCCGCGAGTACGGCCGCGACTGCGGCCGCGACCTACGAGGCACGCCGCGAGATCAGCAGCCGCGAGATGTGCCGCGAGCGGCCGCGAACGCCGCGAAGTGCCGCGAGCCGCGATTGCCGCGAGCTTGAGCCGCGAGGGCCGCGAGGCCGCGACGCCGCGATGCCGCGAGCCGCGAGATAGCCGCGATTGCCGCGAATCGCCGCGATCTACGGATGCCGCGATCTAAACGCCGCGACATTAGCCGCGAGCCGCGAGTTCAAAAGCCGCGAAGCCGCGAGCGCTGCCGCGAGAATGCCGCGACCAATTTGCCGCGATGAACTGCCGCGATAGGCCGCGACGTGTCGCTGCCGCGAGCCGCGAGCCGCGAAGCCGCGATCTGCCGCGACTCTCGCGCCGCGATAGGGAGCCGCGAGCGCCGCGACGTGCCGCGAATACAGCCGCGAACCGCCGCGACGCCGCGAGCCGCGATGGGCCGCGACAAGCCGCGATGCCGCGATTGGCCGCGATCTTGGGCCGCGAGCCGGCCGCGAACGCCGCGACTAGCCGCGATCAAGCCGCGAGCCGCGAGCCGCGAACGTTGGGGCCGCGATTCGCCGCGACGGCCGCGAAGGTGCCGCGAGCTTGGGAAGCCGCGACGCCGCGACGCCGCGAC'
    target = 'GCCGCGAGC'

    index_positions = []
    start_pos = 0

    # Finds all instances of the target in side DNA sequence 
    while True:
        # Pos is set to the index of target then appended to index_positions
        pos = sequence.find(target, start_pos)
        # Breaks sequence if at last character in DNA sequence 
        if pos == -1:
            break
        index_positions.append(pos)
        start_pos = pos + 1
    # Addes one to all positions as result wanted in 1 base indexing 
    positions = [i+1 for i in index_positions]

    print(positions)
    
motif()